"""add columns to orders table

Revision ID: fe54ae433356
Revises: 8864ff198d67
Create Date: 2024-04-04 23:22:08.734083

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "fe54ae433356"
down_revision: Union[str, None] = "8864ff198d67"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("geocoordinates")
    op.add_column("orders", sa.Column("client", sa.String(), nullable=False))
    op.add_column("orders", sa.Column("expected_date", sa.DateTime(), nullable=False))
    op.add_column("orders", sa.Column("address_id", sa.Integer(), nullable=False))
    op.drop_constraint("orders_position_id_fkey", "orders", type_="foreignkey")
    op.create_foreign_key(None, "orders", "addresses", ["address_id"], ["id"])
    op.drop_column("orders", "position_id")
    op.add_column("positions", sa.Column("order_id", sa.Integer()))
    op.drop_constraint("positions_address_id_fkey", "positions", type_="foreignkey")
    op.create_foreign_key(
        None, "positions", "orders", ["order_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("positions", "address_id")
    op.alter_column("routes", "executor_id", existing_type=sa.INTEGER())
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("routes", "executor_id", existing_type=sa.INTEGER(), nullable=True)
    op.add_column(
        "positions",
        sa.Column("address_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "positions", type_="foreignkey")
    op.create_foreign_key(
        "positions_address_id_fkey",
        "positions",
        "addresses",
        ["address_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("positions", "order_id")
    op.add_column(
        "orders",
        sa.Column("position_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "orders", type_="foreignkey")
    op.create_foreign_key(
        "orders_position_id_fkey",
        "orders",
        "positions",
        ["position_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("orders", "address_id")
    op.drop_column("orders", "expected_date")
    op.drop_column("orders", "client")
    op.create_table(
        "geocoordinates",
        sa.Column(
            "latitude",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "longitude",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("address_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["addresses.id"],
            name="geocoordinates_address_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="geocoordinates_pkey"),
    )
    # ### end Alembic commands ###
